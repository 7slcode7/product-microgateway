docker:
  dockerConfig:
    name:
    registry:
    tag:
    buildImage:
    dockerHost:
    dockerCertPath:
    baseImage:
    enableDebug:
    debugPort:
    push:
    username:
    password:
  dockerCopyFiles:
    source:
    target:
    isBallerinaConf:

kubernetes:
  kubernetesDeployment:
    name:
    labels:
    replicas:
    enableLiveness:
    initialDelaySeconds:
    periodSeconds:
    livenessPort:
    imagePullPolicy:
    image:
    env:
    buildImage:
    copyFiles:
    dockerHost:
    dockerCertPath:
    push:
    username:
    password:
    baseImage:
    singleYAML:
  kubernetesService:
    name:
    labels:
    serviceType:
    port:
  kubernetesIngress:
    name:
    labels:
    hostname:
    annotations:
    path:
    targetPath:
    ingressClass:
    enableTLS:
  kubernetesHpa:
    name:
    labels:
    minReplicas:
    maxReplicas:
    cpuPrecentage:
  kubernetesSecret:
    name:
    mountPath:
    readOnly:
    data:
  kubernetesConfigMap:
    name:
    mountPath:
    readOnly:
    ballerinaConf:
    data:
  kubernetesPersistentVolumeClaim:
    name:
    mountPath:
    readOnly:
    accessMode:
    volumeClaimSize:
  kubernetesJob:
    name:
    labels:
    restartPolicy:
    backoffLimit:
    activeDeadlineSeconds:
    schedule:
    imagePullPolicy:
    image:
    env:
    buildImage:
    dockerHost:
    dockerCertPath:
    push:
    username:
    password:
    baseImage: